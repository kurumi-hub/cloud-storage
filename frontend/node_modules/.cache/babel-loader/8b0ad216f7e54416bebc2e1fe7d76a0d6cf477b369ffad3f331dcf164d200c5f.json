{"ast":null,"code":"var _jsxFileName = \"D:\\\\cloud-storage-app\\\\frontend\\\\src\\\\components\\\\FileManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Giúp gửi yêu cầu HTTP đến backend\nimport FileItem from './FileItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileManager() {\n  _s();\n  const [files, setFiles] = useState([]); // Dữ liệu tệp sẽ được tải từ backend\n  const [file, setFile] = useState(null);\n\n  // Lấy danh sách các tệp từ backend\n  useEffect(() => {\n    axios.get('http://localhost:5000/files') // Gửi yêu cầu GET đến backend để lấy danh sách tệp\n    .then(response => {\n      setFiles(response.data); // Lưu danh sách tệp vào state\n    }).catch(error => {\n      console.error('Error fetching files:', error);\n    });\n  }, []); // useEffect chỉ chạy 1 lần khi component được render lần đầu tiên\n\n  // Xử lý tải tệp lên\n  const handleFileUpload = e => {\n    const formData = new FormData(); // Tạo FormData để gửi tệp\n    formData.append('file', e.target.files[0]); // Thêm tệp vào FormData\n\n    axios.post('http://localhost:5000/upload', formData) // Gửi tệp đến backend qua API POST\n    .then(response => {\n      setFiles([...files, response.data.file.filename]); // Thêm tệp mới vào danh sách\n    }).catch(error => {\n      console.error('Error uploading file:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-manager-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Ignore Folder Structure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Grid View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-list\",\n      children: files.map((file, index) =>\n      /*#__PURE__*/\n      // Lặp qua danh sách các tệp và hiển thị từng tệp\n      _jsxDEV(FileItem, {\n        file: {\n          name: file,\n          type: 'file'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(FileManager, \"xLjH6g2OroLR9TAdd0QnK8xl8HM=\");\n_c = FileManager;\nexport default FileManager;\nvar _c;\n$RefreshReg$(_c, \"FileManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","FileItem","jsxDEV","_jsxDEV","FileManager","_s","files","setFiles","file","setFile","get","then","response","data","catch","error","console","handleFileUpload","e","formData","FormData","append","target","post","filename","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","map","index","name","_c","$RefreshReg$"],"sources":["D:/cloud-storage-app/frontend/src/components/FileManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Giúp gửi yêu cầu HTTP đến backend\r\nimport FileItem from './FileItem';\r\n\r\nfunction FileManager() {\r\n  const [files, setFiles] = useState([]); // Dữ liệu tệp sẽ được tải từ backend\r\n  const [file, setFile] = useState(null);\r\n\r\n  // Lấy danh sách các tệp từ backend\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/files') // Gửi yêu cầu GET đến backend để lấy danh sách tệp\r\n      .then(response => {\r\n        setFiles(response.data); // Lưu danh sách tệp vào state\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching files:', error);\r\n      });\r\n  }, []); // useEffect chỉ chạy 1 lần khi component được render lần đầu tiên\r\n\r\n  // Xử lý tải tệp lên\r\n  const handleFileUpload = (e) => {\r\n    const formData = new FormData(); // Tạo FormData để gửi tệp\r\n    formData.append('file', e.target.files[0]); // Thêm tệp vào FormData\r\n\r\n    axios.post('http://localhost:5000/upload', formData) // Gửi tệp đến backend qua API POST\r\n      .then(response => {\r\n        setFiles([...files, response.data.file.filename]); // Thêm tệp mới vào danh sách\r\n      })\r\n      .catch(error => {\r\n        console.error('Error uploading file:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-manager\">\r\n      <div className=\"file-manager-header\">\r\n        <button className=\"btn\">Refresh</button>\r\n        <input type=\"file\" onChange={handleFileUpload} /> {/* Chọn tệp để tải lên */}\r\n        <button className=\"btn\">Ignore Folder Structure</button>\r\n        <button className=\"btn\">Grid View</button>\r\n      </div>\r\n      <div className=\"file-list\">\r\n        {files.map((file, index) => ( // Lặp qua danh sách các tệp và hiển thị từng tệp\r\n          <FileItem key={index} file={{ name: file, type: 'file' }} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}